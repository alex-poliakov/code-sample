{"version":3,"sources":["components/transactionCard.js","components/transactionAccordion.js","components/placeholder.js","pages/transactionsPage.js","hooks/http-hook.js","App.js","index.js"],"names":["TransactionCard","transaction","cardIndex","useState","activeIndex","setIsOpen","Accordion","Title","active","index","onClick","e","titleProps","className","type","Icon","name","amount","Content","id","effectiveDate","TransactionAccordion","listItems","transactions","map","key","styled","Placeholder","Segment","TransactionsPage","request","useCallback","url","method","body","a","fetch","JSON","stringify","headers","res","json","data","console","log","setTransactions","getTransactions","fetched","useEffect","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAGaA,EAAkB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAAgB,EAC5BC,mBAAS,MADmB,mBACtDC,EADsD,KACzCC,EADyC,KAS7D,OACI,oCACE,kBAACC,EAAA,EAAUC,MAAX,CACEC,OAAQJ,IAAgBF,EACxBO,MAAOP,EACPQ,QAXO,SAACC,EAAGC,GAAgB,IACzBH,EAAUG,EAAVH,MAGRJ,EAFiBD,IAAgBK,GAAS,EAAIA,IAUxCI,UAAgC,UAArBZ,EAAYa,KAAmB,gBAAkB,kBAE5D,kBAACC,EAAA,EAAD,CAAMC,KAAK,aANb,SAOSf,EAAYa,KAPrB,aAOqCb,EAAYgB,QAEjD,kBAACX,EAAA,EAAUY,QAAX,CAAmBV,OAAQJ,IAAgBF,GAA3C,OACOD,EAAYkB,GADnB,IACuB,6BADvB,mBAEmBlB,EAAYmB,iBCpB1BC,EAAuB,SAAC,GAAsB,IACnDC,EADkD,EAAnBC,aACNC,KAAI,SAACvB,EAAaQ,GAAd,OACjC,kBAAC,EAAD,CAAiBgB,IAAKxB,EAAYkB,GAAIlB,YAAaA,EAAaC,UAAWO,OAE7E,OACE,kBAACH,EAAA,EAAD,CAAWoB,QAAM,GAAEJ,I,SCPVK,EAAc,WACzB,OACE,kBAACC,EAAA,EAAD,yCCESC,EAAmB,WAAO,IAC7BC,ECcD,CAAEA,QAlBOC,sBAAW,uCAAC,WAAOC,EAAKC,EAAQC,GAApB,iBAAAC,EAAA,+EAENC,MAAMJ,EAAK,CAC3BC,SACAC,KAAMG,KAAKC,UAAUJ,GACrBK,QAAS,CACP,eAAgB,sBANI,cAElBC,EAFkB,gBAULA,EAAIC,OAVC,cAUlBC,EAVkB,yBAYjBA,GAZiB,kCAcxBC,QAAQC,IAAR,MAdwB,0DAAD,0DAgBxB,KDZKd,QAD4B,EAEI3B,mBAAS,IAFb,mBAE7BoB,EAF6B,KAEfsB,EAFe,KAI9BC,EAAkBf,sBAAW,sBAAC,4BAAAI,EAAA,+EAEVL,EAAQ,eAAgB,OAFd,OAE1BiB,EAF0B,OAGhCF,EAAgBE,GAHgB,uGAKjC,CAACjB,IAMJ,OAJAkB,qBAAU,WACRF,MACC,CAACA,IAGF,yBAAKjC,UAAU,yBACZU,EAAa0B,OACV,kBAAC,EAAD,CAAsB1B,aAAcA,IACpC,kBAAC,EAAD,QEdK2B,MANf,WACE,OACE,kBAAC,EAAD,OCHJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.dfd14d90.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Accordion, Icon } from 'semantic-ui-react'\n\nexport const TransactionCard = ({ transaction, cardIndex }) => {\n  const [activeIndex, setIsOpen] = useState(null);\n\n  const toggle = (e, titleProps) => {\n    const { index } = titleProps\n    const newIndex = activeIndex === index ? -1 : index\n\n    setIsOpen(newIndex)\n  }\n  return (\n      <>\n        <Accordion.Title\n          active={activeIndex === cardIndex}\n          index={cardIndex}\n          onClick={toggle}\n          className={transaction.type === 'debit' ? 'accordion-red' : 'accordion-blue'}\n        >\n          <Icon name='dropdown' />\n          Type: {transaction.type}, Amount: {transaction.amount}\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === cardIndex}>\n          Id: {transaction.id} <br/>\n          Effective Date: {transaction.effectiveDate}\n        </Accordion.Content>\n      </>\n  );\n}","import React from 'react';\nimport { Accordion } from 'semantic-ui-react';\n\nimport { TransactionCard } from './transactionCard';\n\nexport const TransactionAccordion = ({ transactions }) => {\n  const listItems = transactions.map((transaction, index) =>\n    <TransactionCard key={transaction.id} transaction={transaction} cardIndex={index} />\n  );\n  return (\n    <Accordion styled>{listItems}</Accordion>\n  );\n}","import React from 'react';\nimport { Segment } from 'semantic-ui-react';\n\nexport const Placeholder = () => {\n  return (\n    <Segment>You don't have any transactions</Segment>\n  );\n}","import React, { useState, useEffect, useCallback } from 'react';\n\nimport { useHttp } from '../hooks/http-hook';\n\nimport { TransactionAccordion } from '../components/transactionAccordion';\nimport { Placeholder } from '../components/placeholder';\n\nexport const TransactionsPage = () => {\n  const { request } = useHttp();\n  const [transactions, setTransactions] = useState([]);\n\n  const getTransactions = useCallback(async () => {\n    try {\n      const fetched = await request('/transaction', 'GET');\n      setTransactions(fetched)\n    } catch (e) { }\n  }, [request])\n\n  useEffect(() => {\n    getTransactions()\n  }, [getTransactions])\n\n  return (\n    <div className='transaction-list-body'>\n      {transactions.length\n        ? <TransactionAccordion transactions={transactions} />\n        : <Placeholder />}\n    </div>\n  )\n}","import { useCallback } from 'react';\n\nexport const useHttp = () => {\n\n  const request = useCallback(async (url, method, body) => {\n    try {\n      const res = await fetch(url, {\n        method,\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      const data = await res.json();\n\n      return data;\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n\n  return { request };\n}","import React from 'react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css'\n\nimport { TransactionsPage } from './pages/transactionsPage'\n\nfunction App() {\n  return (\n    <TransactionsPage />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}